{"version":3,"sources":["webpack:///path---react-note-eb4bb1e7cc3408a98066.js","webpack:///./.cache/json/react-note.json"],"names":["webpackJsonp","796","module","exports","data","post","id","html","htmlAst","type","children","tagName","properties","value","className","dataLanguage","href","src","quirksMode","fields","slug","prefix","frontmatter","title","subTitle","cover","childImageSharp","resize","author","footnote","site","siteMetadata","facebook","appId","pathContext"],"mappings":"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","file":"path---react-note-eb4bb1e7cc3408a98066.js","sourcesContent":["webpackJsonp([258549023466380],{\n\n/***/ 796:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"post\":{\"id\":\"D:/document/blog/content/posts/2018-10-24--react-note/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>Install</h2>\\n<ol>\\n<li>install node</li>\\n<li>install create-react-app</li>\\n<li>\\n<p>using create-react-app to create a new project</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"shell=\\\">\\n      <pre class=\\\"language-shell=\\\"><code class=\\\"language-shell=\\\">create-react-app newProject</code></pre>\\n      </div>\\n</li>\\n<li>run <code class=\\\"language-text\\\">npm start</code> to start project</li>\\n</ol>\\n<h2>Project Structure</h2>\\n<h4>public</h4>\\n<p>用來存放一些靜態設定檔或是HTML檔案\\nmanifest.json 則是用來設定 meta data 資訊</p>\\n<h4>src</h4>\\n<p>用來存放 react source</p>\\n<h4>build</h4>\\n<p>透過 <code class=\\\"language-text\\\">npm run build</code> 會建立 build 資料夾，並編譯出真正放在伺服器上的所有資料、程式</p>\\n<h2>JSX</h2>\\n<p>JSX 是一種語法糖，將 JS 中的 類HTML 結構編譯為 JS 程式，幫助開發者更直覺的開發並且開發較好維護的程式碼。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">import React, { Component } from &#39;react&#39;;\\nclass App extends Component {\\n  render() {\\n    return (\\n      // JSX 寫法    \\n      // &lt;div className=&quot;App&quot;&gt;\\n      //   &lt;h1&gt;React App&lt;/h1&gt;\\n      // &lt;/div&gt;\\n\\n      //this is how react really doing, compile jsx to js\\n      //and this is why you haven&#39;t used React but still need  import it\\n      //不用 JSX 的寫法\\n      React.createElement(&#39;div&#39;, {className: &#39;App&#39;}, React.createElement(&#39;h1&#39;, null, &#39;React App&#39;))\\n    );\\n  }\\n}</code></pre>\\n      </div>\\n<h2>CSS in React</h2>\\n<p>透過 import 外部的 CSS ，但此種用法必須搭配 webpack(css-loader)，而且此種方式加入的 CSS 會是全域的 CSS，如果有同名稱的選擇器會相互覆蓋</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">import &#39;./Person.css&#39;\\n\\nconst Person = () =&gt; {\\n    return (\\n        &lt;div className=&quot;Person&quot;&gt;\\n            &lt;p&gt;Person Component&lt;/p&gt;\\n        &lt;/div&gt;\\n        \\n    )\\n}</code></pre>\\n      </div>\\n<p>透過 inline 的方式，但缺點是不能寫 mediaQuery, pseudo 元素，但可透過一個套件 <a href=\\\"https://github.com/FormidableLabs/radium\\\">radium</a></p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">//透過一般的 inline 方式\\nconst Person = () =&gt; {\\n    return (\\n        &lt;p style={{color: &quot;red&quot;}}&gt;Person Component&lt;/p&gt;\\n    )\\n}\\n\\n//inline 方式也可以透過變數來控制 css\\nconst Animal = () =&gt; {\\n    const style = {\\n        color: &quot;red&quot;,\\n        border: &quot;1px solid #000&quot;,\\n        borderRadius: &quot;3px&quot;\\n    }\\n    return (\\n        &lt;p style={style}&gt;Person Component&lt;/p&gt;\\n    )\\n}\\n\\n//透過 Radium 來使用CSS\\nimport Radium, { StyleRoot } from &#39;radium&#39;\\n\\n//如果要透過 Radium 加上 media query 則必須在父元素包上 StyleRoot，其他用法不用\\nclass App extends Component {\\n  render() {    \\n    return (\\n      &lt;StyleRoot&gt;             \\n          &lt;h1&gt;Hello&lt;/h1&gt;\\n          &lt;Comp /&gt;\\n      &lt;/StyleRoot&gt;\\n    );\\n  }\\n}\\n\\n//可以使用正常的 CSS，也可以使用 Pseudo 元素\\nconst Person = () =&gt; {\\n  const style = {\\n        &#39;@media (min-width: 500px)&#39;: {\\n            width: &#39;450px&#39;,\\n            color: &#39;green&#39;\\n        },\\n        color: &#39;red&#39;,\\n        &#39;:hover&#39;: {\\n          color: &#39;pink&#39;\\n        }\\n    }\\n  return (    \\n      &lt;div style={style}&gt;        \\n          &lt;p&gt;Start editing to see some magic happen :)&lt;/p&gt;\\n      &lt;/div&gt;    \\n  )\\n}\\n\\n//最後必須呼叫 Radium 並把 component 傳入\\nconst Comp = Radium(Person)</code></pre>\\n      </div>\\n<p>透過CSS Module</p>\\n<h5>啟用</h5>\\n<p>以 create-react-app 舉例，需要先在 webpack 中啟用。</p>\\n<ol>\\n<li>先執行 <code class=\\\"language-text\\\">npm run eject</code> </li>\\n<li>找到 config 資料夾下的 webpack.config.*(dev or prod)</li>\\n<li>找到 module 下面設定 css 的區塊（<code class=\\\"language-text\\\">test: /\\\\.css$/</code>)</li>\\n<li>\\n<p>在 css-loader 的部分加入 options(modules、localIdentName)</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">{\\nloader: require.resolve(&#39;css-loader&#39;),\\noptions: {\\n    importLoaders: 1,\\n    //啟用 modules 功能\\n    modules: true,\\n    //設定編譯過後的 css name 加上一些識別使其成為唯一值\\n    localIdentName: &#39;[name]__[local]__[hash:base64:5]&#39;\\n    \\n    //下為 .prod 中的屬性，不要蓋掉\\n    minimize: true,\\n    sourceMap: shouldUseSourceMap,\\n},\\n},</code></pre>\\n      </div>\\n</li>\\n</ol>\\n<h5>Usage</h5>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"css=\\\">\\n      <pre class=\\\"language-css=\\\"><code class=\\\"language-css=\\\">.Person{\\n    width: 60%;\\n    margin: 16px auto;\\n    border: 1px solid #eee;\\n    box-shadow: 0 2px 3px #ccc;\\n    padding: 16px;\\n    text-align: center;\\n}\\n\\n.big{\\n    font-size: 24px;\\n}\\n\\n.red{\\n    color: red;\\n}</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">import React from &#39;react&#39;\\n//與引入外部 CSS 不同，啟用 CSS Module 後引入的會變成一個物件\\nimport styles from &#39;./Person.css&#39;\\n\\nconst Person = () =&gt; {\\n    return (\\n        &lt;div className={styles.Person}&gt;\\n            &lt;p className={styles.big}&gt;Person Component&lt;/p&gt;\\n            &lt;p className={styles.red}&gt;Person Component&lt;/p&gt;\\n        &lt;/div&gt;\\n        \\n    )\\n}\\n\\nexport default Person</code></pre>\\n      </div>\\n<h2>Stateless and Stateful</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Stateful</th>\\n<th>Stateless</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>class Abc extends Component { … }</td>\\n<td>const Abc = (props) => { … }</td>\\n</tr>\\n<tr>\\n<td>Access to State</td>\\n<td>X</td>\\n</tr>\\n<tr>\\n<td>Lifecycle Hooks</td>\\n<td>X</td>\\n</tr>\\n<tr>\\n<td>Access State and Props via “this”</td>\\n<td>Access Props via “this”</td>\\n</tr>\\n<tr>\\n<td><code class=\\\"language-text\\\">this.state.value &amp; this.props.value2</code></td>\\n<td><code class=\\\"language-text\\\">props.value</code></td>\\n</tr>\\n</tbody>\\n</table>\\n<h2>Lifecycle Hooks</h2>\\n<p><img src=\\\"https://rangle.github.io/react-training/img/reactjs_component_lifecycle_functions.png\\\">\\n不管在 Mounting 或是 Updating 階段且執行到 render hooks 時，如果有其他嵌套的子組件的話，會先執行子組件的 Lifecycle Hooks。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">&lt;Father&gt;\\n    &lt;Child /&gt;\\n&lt;/Father&gt;</code></pre>\\n      </div>\\n<p>以上方例子來說，如果在各個 Hook 中下 log 的話會依照如下順序：</p>\\n<ol>\\n<li><code class=\\\"language-text\\\">running constructor in Father comp</code></li>\\n<li><code class=\\\"language-text\\\">running componentWillMount in Father comp</code></li>\\n<li><code class=\\\"language-text\\\">running render in Father comp</code></li>\\n<li><code class=\\\"language-text\\\">running constructor in Child comp</code></li>\\n<li><code class=\\\"language-text\\\">running componentWillMount in Child comp</code></li>\\n<li><code class=\\\"language-text\\\">running render in Child comp</code></li>\\n<li><code class=\\\"language-text\\\">running componentDidMount in Child comp</code></li>\\n<li><code class=\\\"language-text\\\">running componentDidMount in Father comp</code></li>\\n</ol>\\n<h2>How React Updates The DOM</h2>\\n<p>並不是執行了 render 方法後，就一定會更新。\\nReact 會透過比較 virtual DOM 來確認是否需要更新，需要才會真正的去操作 DOM，藉此來優化效能。</p>\\n<p><img src=\\\"https://i.imgur.com/kqLfoZz.png\\\"></p>\\n<h2>Fragments</h2>\\n<p>React 16.2 Feature\\n可以不用額外包一層div</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">// 原來的寫法\\n&lt;div&gt;        \\n  &lt;p&gt;First&lt;/p&gt;\\n  &lt;p&gt;Second&lt;/p&gt;\\n  &lt;p&gt;Thired&lt;/p&gt;\\n&lt;/div&gt;\\n\\n// 新的用法\\n&lt;&gt;\\n  &lt;p&gt;First&lt;/p&gt;\\n  &lt;p&gt;Second&lt;/p&gt;\\n  &lt;p&gt;Thired&lt;/p&gt;\\n&lt;/&gt;\\n\\n// 概念\\n// 利用 HOC 直接回傳其 children \\nexport default (props) =&gt; props.children</code></pre>\\n      </div>\\n<h2>HOC(High Order Component)</h2>\\n<p>本質上只是一個函數，可以回傳 JSX、Stateless and Stateful component\\n透過 HOC 可以將一些固定的邏輯抽取出來，或是增刪修改 state 或 props 。</p>\\n<h4>e.g.</h4>\\n<p>僅是把收到的 children 再回傳出去，也就是回傳 JSX</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">// Auxiliary(與 react 16.2 Fragments 一樣的作用)\\n\\nexport default (props) =&gt; props.children</code></pre>\\n      </div>\\n<h4>Usage</h4>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">render() {\\n    return (\\n      &lt;Aux&gt;\\n        &lt;Cockpit click={this.Addhandler}/&gt;\\n        &lt;ErrorBoundary&gt;\\n          &lt;Persons persons={this.state.persons}/&gt;\\n        &lt;/ErrorBoundary&gt;\\n      &lt;/Aux&gt;\\n    );\\n  }</code></pre>\\n      </div>\\n<h4>e.g.</h4>\\n<p>回傳一個 stateless component，作用是把傳進來的組件再包裹一層使用者自訂的 class </p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">import React, { Component } from &#39;react&#39;\\n\\nconst withClass = (Comp, classes) =&gt; {\\n    return props =&gt; (\\n        &lt;div className={classes}&gt; \\n            &lt;Comp {...props}/&gt;\\n        &lt;/div&gt;\\n    )\\n}\\n\\nexport default withClass</code></pre>\\n      </div>\\n<h4>Usage</h4>\\n<p><code class=\\\"language-text\\\">export default withClass(App, styles.App);</code></p>\\n<h2>PropTypes</h2>\\n<p>React 透過 PropTypes 來做類型檢測的功能。\\nReact v15.5 開始，已把 PropTypes 拆做獨立的 library。\\n使用上需要另外安裝 <code class=\\\"language-text\\\">npm install --save prop-types</code></p>\\n<h4>usage</h4>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">import PropTypes from &#39;prop-types&#39;\\n\\nconst Example = (props) =&gt; {\\n  return (\\n    &lt;div&gt;      \\n      &lt;p&gt;{props.name}&lt;/p&gt;\\n      &lt;p&gt;{props.age}&lt;/p&gt;\\n    &lt;/div&gt;\\n  )\\n}\\n\\nExample.propTypes = {\\n  name: PropTypes.string,\\n  age: PropTypes.number\\n}\\n\\nexport default Example</code></pre>\\n      </div>\\n<p><a href=\\\"http://www.css88.com/react/docs/typechecking-with-proptypes.html\\\">PropTypes 中文文檔</a></p>\\n<h1>React-router(V4) note</h1>\\n<h2>Install</h2>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">npm install --save react-router-dom</code></pre>\\n      </div>\\n<h2>Introduction</h2>\\n<h4>react-router 與 react-router-dom 的差別</h4>\\n<p>react-router-dom 是基於 react-router 並針對瀏覽器環境加入一些功能，像是 Link、BrowserRouter和HashRouter。其他與 react-router 中相同的方法則是將其再導出而已。所以瀏覽器環境下使用 react-router-dom 即可。</p>\\n<h2>Usage</h2>\\n<p>需要在最外層使用 HashRouter 或 BrowserRouter，差別如下:</p>\\n<h4>HashRouter</h4>\\n<p>通過hash值來對路由進行控制，所以網址內會有個#</p>\\n<h4>BrowserRouter</h4>\\n<p>基於HTML5 history API (pushState, replaceState, popState)，但可能會有相容性的問題</p>\\n<h4>Route</h4>\\n<p>用來控制對應的路由顯示對應的組件，常用的屬性exact、path 以及 component。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">&lt;Route exact path=&quot;/&quot; component={Homw} /&gt;\\n&lt;Route path=&quot;/about&quot; component={About} /&gt;\\n&lt;Route path=&quot;/hello&quot; render={() =&gt; &lt;h1&gt;Hello&lt;/h1} /&gt;</code></pre>\\n      </div>\\n<p><strong>exact</strong> 用來作完全匹配，預設為 false，會匹配 <code class=\\\"language-text\\\">/about</code>、<code class=\\\"language-text\\\">/about/a</code>、<code class=\\\"language-text\\\">/about/b</code>，改為 true 的話便只會匹配<code class=\\\"language-text\\\">/about</code>\\n<strong>path</strong> 用來設定要匹配的路徑\\n<strong>component</strong> 用來設定匹配後要顯示的組件\\n<strong>render</strong> 用來設定匹配後要顯示的東西</p>\\n<h4>Link、NavLink</h4>\\n<p>控制路由跳轉</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">&lt;link to=&quot;/about&quot;/&gt;\\n&lt;link to=&quot;/about?name=windy&quot;/&gt;\\n&lt;link to={{\\n     pathname:&#39;/about&#39;,\\n     search:&#39;?name=angel&#39;,\\n     hash:&#39;#women&#39;,\\n     state:{fromDashboard:true}\\n}}/&gt;</code></pre>\\n      </div>\\n<h4>Switch</h4>\\n<p>只渲染出第一個與當前訪問地址匹配的 Route 或 Redirect\\n否則只要匹配的都會顯示</p>\\n<h4>Redirect</h4>\\n<p>重新導向</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">&lt;Switch&gt;\\n  &lt;Redirect from=&#39;/users/:id&#39; to=&#39;/users/profile/:id&#39;/&gt;\\n  &lt;Route path=&#39;/users/profile/:id&#39; component={Profile}/&gt;\\n&lt;/Switch&gt;</code></pre>\\n      </div>\\n<h4>match</h4>\\n<p>match是在使用router之後被放入props中的一個屬性，在class創建的組件中我們需要通過this.props.match來獲取match之中的信息。match中包含的信息如下。\\n<img src=\\\"https://i.imgur.com/btstriI.png\\\"></p>\\n<h3>參考來源</h3>\\n<p><a href=\\\"http://www.ucamc.com/e-learning/javascript/278-%E7%B0%A1%E5%96%AE%E4%BB%8B%E7%B4%B9%E4%BA%86%E8%A7%A3react-router-4%E6%95%99%E5%AD%B8.html\\\">一探究竟了解React-router 4簡易教學</a>\\n<a href=\\\"https://hk.saowen.com/a/73172216c8b96ab4f135316b229c9d578a81be535f5c7feb4b06cc032a99c1d3\\\">React 快速上手 - 07 前端路由 react-router</a></p>\",\"htmlAst\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Install\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"install node\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"install create-react-app\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"using create-react-app to create a new project\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"shell=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-shell=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-shell=\"]},\"children\":[{\"type\":\"text\",\"value\":\"create-react-app newProject\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"run \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"npm start\"}]},{\"type\":\"text\",\"value\":\" to start project\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Project Structure\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"public\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"用來存放一些靜態設定檔或是HTML檔案\\nmanifest.json 則是用來設定 meta data 資訊\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"src\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"用來存放 react source\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"build\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"透過 \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"npm run build\"}]},{\"type\":\"text\",\"value\":\" 會建立 build 資料夾，並編譯出真正放在伺服器上的所有資料、程式\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"JSX\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"JSX 是一種語法糖，將 JS 中的 類HTML 結構編譯為 JS 程式，幫助開發者更直覺的開發並且開發較好維護的程式碼。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"import React, { Component } from 'react';\\nclass App extends Component {\\n  render() {\\n    return (\\n      // JSX 寫法    \\n      // <div className=\\\"App\\\">\\n      //   <h1>React App</h1>\\n      // </div>\\n\\n      //this is how react really doing, compile jsx to js\\n      //and this is why you haven't used React but still need  import it\\n      //不用 JSX 的寫法\\n      React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'React App'))\\n    );\\n  }\\n}\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"CSS in React\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"透過 import 外部的 CSS ，但此種用法必須搭配 webpack(css-loader)，而且此種方式加入的 CSS 會是全域的 CSS，如果有同名稱的選擇器會相互覆蓋\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"import './Person.css'\\n\\nconst Person = () => {\\n    return (\\n        <div className=\\\"Person\\\">\\n            <p>Person Component</p>\\n        </div>\\n        \\n    )\\n}\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"透過 inline 的方式，但缺點是不能寫 mediaQuery, pseudo 元素，但可透過一個套件 \"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://github.com/FormidableLabs/radium\"},\"children\":[{\"type\":\"text\",\"value\":\"radium\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"//透過一般的 inline 方式\\nconst Person = () => {\\n    return (\\n        <p style={{color: \\\"red\\\"}}>Person Component</p>\\n    )\\n}\\n\\n//inline 方式也可以透過變數來控制 css\\nconst Animal = () => {\\n    const style = {\\n        color: \\\"red\\\",\\n        border: \\\"1px solid #000\\\",\\n        borderRadius: \\\"3px\\\"\\n    }\\n    return (\\n        <p style={style}>Person Component</p>\\n    )\\n}\\n\\n//透過 Radium 來使用CSS\\nimport Radium, { StyleRoot } from 'radium'\\n\\n//如果要透過 Radium 加上 media query 則必須在父元素包上 StyleRoot，其他用法不用\\nclass App extends Component {\\n  render() {    \\n    return (\\n      <StyleRoot>             \\n          <h1>Hello</h1>\\n          <Comp />\\n      </StyleRoot>\\n    );\\n  }\\n}\\n\\n//可以使用正常的 CSS，也可以使用 Pseudo 元素\\nconst Person = () => {\\n  const style = {\\n        '@media (min-width: 500px)': {\\n            width: '450px',\\n            color: 'green'\\n        },\\n        color: 'red',\\n        ':hover': {\\n          color: 'pink'\\n        }\\n    }\\n  return (    \\n      <div style={style}>        \\n          <p>Start editing to see some magic happen :)</p>\\n      </div>    \\n  )\\n}\\n\\n//最後必須呼叫 Radium 並把 component 傳入\\nconst Comp = Radium(Person)\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"透過CSS Module\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h5\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"啟用\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"以 create-react-app 舉例，需要先在 webpack 中啟用。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"先執行 \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"npm run eject\"}]},{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"找到 config 資料夾下的 webpack.config.*(dev or prod)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"找到 module 下面設定 css 的區塊（\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"test: /\\\\.css$/\"}]},{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"在 css-loader 的部分加入 options(modules、localIdentName)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\\nloader: require.resolve('css-loader'),\\noptions: {\\n    importLoaders: 1,\\n    //啟用 modules 功能\\n    modules: true,\\n    //設定編譯過後的 css name 加上一些識別使其成為唯一值\\n    localIdentName: '[name]__[local]__[hash:base64:5]'\\n    \\n    //下為 .prod 中的屬性，不要蓋掉\\n    minimize: true,\\n    sourceMap: shouldUseSourceMap,\\n},\\n},\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h5\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Usage\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"css=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-css=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-css=\"]},\"children\":[{\"type\":\"text\",\"value\":\".Person{\\n    width: 60%;\\n    margin: 16px auto;\\n    border: 1px solid #eee;\\n    box-shadow: 0 2px 3px #ccc;\\n    padding: 16px;\\n    text-align: center;\\n}\\n\\n.big{\\n    font-size: 24px;\\n}\\n\\n.red{\\n    color: red;\\n}\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"import React from 'react'\\n//與引入外部 CSS 不同，啟用 CSS Module 後引入的會變成一個物件\\nimport styles from './Person.css'\\n\\nconst Person = () => {\\n    return (\\n        <div className={styles.Person}>\\n            <p className={styles.big}>Person Component</p>\\n            <p className={styles.red}>Person Component</p>\\n        </div>\\n        \\n    )\\n}\\n\\nexport default Person\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Stateless and Stateful\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"},{\"type\":\"element\",\"tagName\":\"table\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"thead\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"tr\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"th\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Stateful\"}]},{\"type\":\"element\",\"tagName\":\"th\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Stateless\"}]}]}]},{\"type\":\"element\",\"tagName\":\"tbody\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"tr\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"class Abc extends Component { … }\"}]},{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"const Abc = (props) => { … }\"}]}]},{\"type\":\"element\",\"tagName\":\"tr\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Access to State\"}]},{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"X\"}]}]},{\"type\":\"element\",\"tagName\":\"tr\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Lifecycle Hooks\"}]},{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"X\"}]}]},{\"type\":\"element\",\"tagName\":\"tr\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Access State and Props via “this”\"}]},{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Access Props via “this”\"}]}]},{\"type\":\"element\",\"tagName\":\"tr\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"this.state.value & this.props.value2\"}]}]},{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"props.value\"}]}]}]}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Lifecycle Hooks\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"img\",\"properties\":{\"src\":\"https://rangle.github.io/react-training/img/reactjs_component_lifecycle_functions.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n不管在 Mounting 或是 Updating 階段且執行到 render hooks 時，如果有其他嵌套的子組件的話，會先執行子組件的 Lifecycle Hooks。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"<Father>\\n    <Child />\\n</Father>\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"以上方例子來說，如果在各個 Hook 中下 log 的話會依照如下順序：\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running constructor in Father comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running componentWillMount in Father comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running render in Father comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running constructor in Child comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running componentWillMount in Child comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running render in Child comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running componentDidMount in Child comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running componentDidMount in Father comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"How React Updates The DOM\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"並不是執行了 render 方法後，就一定會更新。\\nReact 會透過比較 virtual DOM 來確認是否需要更新，需要才會真正的去操作 DOM，藉此來優化效能。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"img\",\"properties\":{\"src\":\"https://i.imgur.com/kqLfoZz.png\"},\"children\":[]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Fragments\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"React 16.2 Feature\\n可以不用額外包一層div\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"// 原來的寫法\\n<div>        \\n  <p>First</p>\\n  <p>Second</p>\\n  <p>Thired</p>\\n</div>\\n\\n// 新的用法\\n<>\\n  <p>First</p>\\n  <p>Second</p>\\n  <p>Thired</p>\\n</>\\n\\n// 概念\\n// 利用 HOC 直接回傳其 children \\nexport default (props) => props.children\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"HOC(High Order Component)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"本質上只是一個函數，可以回傳 JSX、Stateless and Stateful component\\n透過 HOC 可以將一些固定的邏輯抽取出來，或是增刪修改 state 或 props 。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"e.g.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"僅是把收到的 children 再回傳出去，也就是回傳 JSX\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"// Auxiliary(與 react 16.2 Fragments 一樣的作用)\\n\\nexport default (props) => props.children\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Usage\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"render() {\\n    return (\\n      <Aux>\\n        <Cockpit click={this.Addhandler}/>\\n        <ErrorBoundary>\\n          <Persons persons={this.state.persons}/>\\n        </ErrorBoundary>\\n      </Aux>\\n    );\\n  }\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"e.g.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"回傳一個 stateless component，作用是把傳進來的組件再包裹一層使用者自訂的 class \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"import React, { Component } from 'react'\\n\\nconst withClass = (Comp, classes) => {\\n    return props => (\\n        <div className={classes}> \\n            <Comp {...props}/>\\n        </div>\\n    )\\n}\\n\\nexport default withClass\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Usage\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"export default withClass(App, styles.App);\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"PropTypes\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"React 透過 PropTypes 來做類型檢測的功能。\\nReact v15.5 開始，已把 PropTypes 拆做獨立的 library。\\n使用上需要另外安裝 \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"npm install --save prop-types\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"usage\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"import PropTypes from 'prop-types'\\n\\nconst Example = (props) => {\\n  return (\\n    <div>      \\n      <p>{props.name}</p>\\n      <p>{props.age}</p>\\n    </div>\\n  )\\n}\\n\\nExample.propTypes = {\\n  name: PropTypes.string,\\n  age: PropTypes.number\\n}\\n\\nexport default Example\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://www.css88.com/react/docs/typechecking-with-proptypes.html\"},\"children\":[{\"type\":\"text\",\"value\":\"PropTypes 中文文檔\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h1\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"React-router(V4) note\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Install\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"npm install --save react-router-dom\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Introduction\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"react-router 與 react-router-dom 的差別\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"react-router-dom 是基於 react-router 並針對瀏覽器環境加入一些功能，像是 Link、BrowserRouter和HashRouter。其他與 react-router 中相同的方法則是將其再導出而已。所以瀏覽器環境下使用 react-router-dom 即可。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Usage\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"需要在最外層使用 HashRouter 或 BrowserRouter，差別如下:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"HashRouter\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"通過hash值來對路由進行控制，所以網址內會有個#\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"BrowserRouter\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"基於HTML5 history API (pushState, replaceState, popState)，但可能會有相容性的問題\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Route\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"用來控制對應的路由顯示對應的組件，常用的屬性exact、path 以及 component。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"<Route exact path=\\\"/\\\" component={Homw} />\\n<Route path=\\\"/about\\\" component={About} />\\n<Route path=\\\"/hello\\\" render={() => <h1>Hello</h1} />\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"exact\"}]},{\"type\":\"text\",\"value\":\" 用來作完全匹配，預設為 false，會匹配 \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"/about\"}]},{\"type\":\"text\",\"value\":\"、\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"/about/a\"}]},{\"type\":\"text\",\"value\":\"、\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"/about/b\"}]},{\"type\":\"text\",\"value\":\"，改為 true 的話便只會匹配\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"/about\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"path\"}]},{\"type\":\"text\",\"value\":\" 用來設定要匹配的路徑\\n\"},{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"component\"}]},{\"type\":\"text\",\"value\":\" 用來設定匹配後要顯示的組件\\n\"},{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"render\"}]},{\"type\":\"text\",\"value\":\" 用來設定匹配後要顯示的東西\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Link、NavLink\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"控制路由跳轉\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"<link to=\\\"/about\\\"/>\\n<link to=\\\"/about?name=windy\\\"/>\\n<link to={{\\n     pathname:'/about',\\n     search:'?name=angel',\\n     hash:'#women',\\n     state:{fromDashboard:true}\\n}}/>\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Switch\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"只渲染出第一個與當前訪問地址匹配的 Route 或 Redirect\\n否則只要匹配的都會顯示\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Redirect\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"重新導向\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"<Switch>\\n  <Redirect from='/users/:id' to='/users/profile/:id'/>\\n  <Route path='/users/profile/:id' component={Profile}/>\\n</Switch>\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"match\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"match是在使用router之後被放入props中的一個屬性，在class創建的組件中我們需要通過this.props.match來獲取match之中的信息。match中包含的信息如下。\\n\"},{\"type\":\"element\",\"tagName\":\"img\",\"properties\":{\"src\":\"https://i.imgur.com/btstriI.png\"},\"children\":[]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"參考來源\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://www.ucamc.com/e-learning/javascript/278-%E7%B0%A1%E5%96%AE%E4%BB%8B%E7%B4%B9%E4%BA%86%E8%A7%A3react-router-4%E6%95%99%E5%AD%B8.html\"},\"children\":[{\"type\":\"text\",\"value\":\"一探究竟了解React-router 4簡易教學\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://hk.saowen.com/a/73172216c8b96ab4f135316b229c9d578a81be535f5c7feb4b06cc032a99c1d3\"},\"children\":[{\"type\":\"text\",\"value\":\"React 快速上手 - 07 前端路由 react-router\"}]}]}],\"data\":{\"quirksMode\":false}},\"fields\":{\"slug\":\"/react-note/\",\"prefix\":\"2018-10-24\"},\"frontmatter\":{\"title\":\"Basics of react and react-router\",\"subTitle\":\"Learn the Basics of react and react-router\",\"cover\":{\"childImageSharp\":{\"resize\":{\"src\":\"/fallins.github.io/static/react-90552fc53de18398a934d32aec962234-160fa.png\"}}}}},\"author\":{\"id\":\"D:/document/blog/content/parts/author.md absPath of file >>> MarkdownRemark\",\"html\":\"<p><strong>Ben</strong> 紀錄學習過程中的筆記…</p>\"},\"footnote\":{\"id\":\"D:/document/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark\",\"html\":\"\"},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"\"}}}},\"pathContext\":{\"slug\":\"/react-note/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---react-note-eb4bb1e7cc3408a98066.js","module.exports = {\"data\":{\"post\":{\"id\":\"D:/document/blog/content/posts/2018-10-24--react-note/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>Install</h2>\\n<ol>\\n<li>install node</li>\\n<li>install create-react-app</li>\\n<li>\\n<p>using create-react-app to create a new project</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"shell=\\\">\\n      <pre class=\\\"language-shell=\\\"><code class=\\\"language-shell=\\\">create-react-app newProject</code></pre>\\n      </div>\\n</li>\\n<li>run <code class=\\\"language-text\\\">npm start</code> to start project</li>\\n</ol>\\n<h2>Project Structure</h2>\\n<h4>public</h4>\\n<p>用來存放一些靜態設定檔或是HTML檔案\\nmanifest.json 則是用來設定 meta data 資訊</p>\\n<h4>src</h4>\\n<p>用來存放 react source</p>\\n<h4>build</h4>\\n<p>透過 <code class=\\\"language-text\\\">npm run build</code> 會建立 build 資料夾，並編譯出真正放在伺服器上的所有資料、程式</p>\\n<h2>JSX</h2>\\n<p>JSX 是一種語法糖，將 JS 中的 類HTML 結構編譯為 JS 程式，幫助開發者更直覺的開發並且開發較好維護的程式碼。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">import React, { Component } from &#39;react&#39;;\\nclass App extends Component {\\n  render() {\\n    return (\\n      // JSX 寫法    \\n      // &lt;div className=&quot;App&quot;&gt;\\n      //   &lt;h1&gt;React App&lt;/h1&gt;\\n      // &lt;/div&gt;\\n\\n      //this is how react really doing, compile jsx to js\\n      //and this is why you haven&#39;t used React but still need  import it\\n      //不用 JSX 的寫法\\n      React.createElement(&#39;div&#39;, {className: &#39;App&#39;}, React.createElement(&#39;h1&#39;, null, &#39;React App&#39;))\\n    );\\n  }\\n}</code></pre>\\n      </div>\\n<h2>CSS in React</h2>\\n<p>透過 import 外部的 CSS ，但此種用法必須搭配 webpack(css-loader)，而且此種方式加入的 CSS 會是全域的 CSS，如果有同名稱的選擇器會相互覆蓋</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">import &#39;./Person.css&#39;\\n\\nconst Person = () =&gt; {\\n    return (\\n        &lt;div className=&quot;Person&quot;&gt;\\n            &lt;p&gt;Person Component&lt;/p&gt;\\n        &lt;/div&gt;\\n        \\n    )\\n}</code></pre>\\n      </div>\\n<p>透過 inline 的方式，但缺點是不能寫 mediaQuery, pseudo 元素，但可透過一個套件 <a href=\\\"https://github.com/FormidableLabs/radium\\\">radium</a></p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">//透過一般的 inline 方式\\nconst Person = () =&gt; {\\n    return (\\n        &lt;p style={{color: &quot;red&quot;}}&gt;Person Component&lt;/p&gt;\\n    )\\n}\\n\\n//inline 方式也可以透過變數來控制 css\\nconst Animal = () =&gt; {\\n    const style = {\\n        color: &quot;red&quot;,\\n        border: &quot;1px solid #000&quot;,\\n        borderRadius: &quot;3px&quot;\\n    }\\n    return (\\n        &lt;p style={style}&gt;Person Component&lt;/p&gt;\\n    )\\n}\\n\\n//透過 Radium 來使用CSS\\nimport Radium, { StyleRoot } from &#39;radium&#39;\\n\\n//如果要透過 Radium 加上 media query 則必須在父元素包上 StyleRoot，其他用法不用\\nclass App extends Component {\\n  render() {    \\n    return (\\n      &lt;StyleRoot&gt;             \\n          &lt;h1&gt;Hello&lt;/h1&gt;\\n          &lt;Comp /&gt;\\n      &lt;/StyleRoot&gt;\\n    );\\n  }\\n}\\n\\n//可以使用正常的 CSS，也可以使用 Pseudo 元素\\nconst Person = () =&gt; {\\n  const style = {\\n        &#39;@media (min-width: 500px)&#39;: {\\n            width: &#39;450px&#39;,\\n            color: &#39;green&#39;\\n        },\\n        color: &#39;red&#39;,\\n        &#39;:hover&#39;: {\\n          color: &#39;pink&#39;\\n        }\\n    }\\n  return (    \\n      &lt;div style={style}&gt;        \\n          &lt;p&gt;Start editing to see some magic happen :)&lt;/p&gt;\\n      &lt;/div&gt;    \\n  )\\n}\\n\\n//最後必須呼叫 Radium 並把 component 傳入\\nconst Comp = Radium(Person)</code></pre>\\n      </div>\\n<p>透過CSS Module</p>\\n<h5>啟用</h5>\\n<p>以 create-react-app 舉例，需要先在 webpack 中啟用。</p>\\n<ol>\\n<li>先執行 <code class=\\\"language-text\\\">npm run eject</code> </li>\\n<li>找到 config 資料夾下的 webpack.config.*(dev or prod)</li>\\n<li>找到 module 下面設定 css 的區塊（<code class=\\\"language-text\\\">test: /\\\\.css$/</code>)</li>\\n<li>\\n<p>在 css-loader 的部分加入 options(modules、localIdentName)</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">{\\nloader: require.resolve(&#39;css-loader&#39;),\\noptions: {\\n    importLoaders: 1,\\n    //啟用 modules 功能\\n    modules: true,\\n    //設定編譯過後的 css name 加上一些識別使其成為唯一值\\n    localIdentName: &#39;[name]__[local]__[hash:base64:5]&#39;\\n    \\n    //下為 .prod 中的屬性，不要蓋掉\\n    minimize: true,\\n    sourceMap: shouldUseSourceMap,\\n},\\n},</code></pre>\\n      </div>\\n</li>\\n</ol>\\n<h5>Usage</h5>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"css=\\\">\\n      <pre class=\\\"language-css=\\\"><code class=\\\"language-css=\\\">.Person{\\n    width: 60%;\\n    margin: 16px auto;\\n    border: 1px solid #eee;\\n    box-shadow: 0 2px 3px #ccc;\\n    padding: 16px;\\n    text-align: center;\\n}\\n\\n.big{\\n    font-size: 24px;\\n}\\n\\n.red{\\n    color: red;\\n}</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">import React from &#39;react&#39;\\n//與引入外部 CSS 不同，啟用 CSS Module 後引入的會變成一個物件\\nimport styles from &#39;./Person.css&#39;\\n\\nconst Person = () =&gt; {\\n    return (\\n        &lt;div className={styles.Person}&gt;\\n            &lt;p className={styles.big}&gt;Person Component&lt;/p&gt;\\n            &lt;p className={styles.red}&gt;Person Component&lt;/p&gt;\\n        &lt;/div&gt;\\n        \\n    )\\n}\\n\\nexport default Person</code></pre>\\n      </div>\\n<h2>Stateless and Stateful</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Stateful</th>\\n<th>Stateless</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>class Abc extends Component { … }</td>\\n<td>const Abc = (props) => { … }</td>\\n</tr>\\n<tr>\\n<td>Access to State</td>\\n<td>X</td>\\n</tr>\\n<tr>\\n<td>Lifecycle Hooks</td>\\n<td>X</td>\\n</tr>\\n<tr>\\n<td>Access State and Props via “this”</td>\\n<td>Access Props via “this”</td>\\n</tr>\\n<tr>\\n<td><code class=\\\"language-text\\\">this.state.value &amp; this.props.value2</code></td>\\n<td><code class=\\\"language-text\\\">props.value</code></td>\\n</tr>\\n</tbody>\\n</table>\\n<h2>Lifecycle Hooks</h2>\\n<p><img src=\\\"https://rangle.github.io/react-training/img/reactjs_component_lifecycle_functions.png\\\">\\n不管在 Mounting 或是 Updating 階段且執行到 render hooks 時，如果有其他嵌套的子組件的話，會先執行子組件的 Lifecycle Hooks。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">&lt;Father&gt;\\n    &lt;Child /&gt;\\n&lt;/Father&gt;</code></pre>\\n      </div>\\n<p>以上方例子來說，如果在各個 Hook 中下 log 的話會依照如下順序：</p>\\n<ol>\\n<li><code class=\\\"language-text\\\">running constructor in Father comp</code></li>\\n<li><code class=\\\"language-text\\\">running componentWillMount in Father comp</code></li>\\n<li><code class=\\\"language-text\\\">running render in Father comp</code></li>\\n<li><code class=\\\"language-text\\\">running constructor in Child comp</code></li>\\n<li><code class=\\\"language-text\\\">running componentWillMount in Child comp</code></li>\\n<li><code class=\\\"language-text\\\">running render in Child comp</code></li>\\n<li><code class=\\\"language-text\\\">running componentDidMount in Child comp</code></li>\\n<li><code class=\\\"language-text\\\">running componentDidMount in Father comp</code></li>\\n</ol>\\n<h2>How React Updates The DOM</h2>\\n<p>並不是執行了 render 方法後，就一定會更新。\\nReact 會透過比較 virtual DOM 來確認是否需要更新，需要才會真正的去操作 DOM，藉此來優化效能。</p>\\n<p><img src=\\\"https://i.imgur.com/kqLfoZz.png\\\"></p>\\n<h2>Fragments</h2>\\n<p>React 16.2 Feature\\n可以不用額外包一層div</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">// 原來的寫法\\n&lt;div&gt;        \\n  &lt;p&gt;First&lt;/p&gt;\\n  &lt;p&gt;Second&lt;/p&gt;\\n  &lt;p&gt;Thired&lt;/p&gt;\\n&lt;/div&gt;\\n\\n// 新的用法\\n&lt;&gt;\\n  &lt;p&gt;First&lt;/p&gt;\\n  &lt;p&gt;Second&lt;/p&gt;\\n  &lt;p&gt;Thired&lt;/p&gt;\\n&lt;/&gt;\\n\\n// 概念\\n// 利用 HOC 直接回傳其 children \\nexport default (props) =&gt; props.children</code></pre>\\n      </div>\\n<h2>HOC(High Order Component)</h2>\\n<p>本質上只是一個函數，可以回傳 JSX、Stateless and Stateful component\\n透過 HOC 可以將一些固定的邏輯抽取出來，或是增刪修改 state 或 props 。</p>\\n<h4>e.g.</h4>\\n<p>僅是把收到的 children 再回傳出去，也就是回傳 JSX</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">// Auxiliary(與 react 16.2 Fragments 一樣的作用)\\n\\nexport default (props) =&gt; props.children</code></pre>\\n      </div>\\n<h4>Usage</h4>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">render() {\\n    return (\\n      &lt;Aux&gt;\\n        &lt;Cockpit click={this.Addhandler}/&gt;\\n        &lt;ErrorBoundary&gt;\\n          &lt;Persons persons={this.state.persons}/&gt;\\n        &lt;/ErrorBoundary&gt;\\n      &lt;/Aux&gt;\\n    );\\n  }</code></pre>\\n      </div>\\n<h4>e.g.</h4>\\n<p>回傳一個 stateless component，作用是把傳進來的組件再包裹一層使用者自訂的 class </p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">import React, { Component } from &#39;react&#39;\\n\\nconst withClass = (Comp, classes) =&gt; {\\n    return props =&gt; (\\n        &lt;div className={classes}&gt; \\n            &lt;Comp {...props}/&gt;\\n        &lt;/div&gt;\\n    )\\n}\\n\\nexport default withClass</code></pre>\\n      </div>\\n<h4>Usage</h4>\\n<p><code class=\\\"language-text\\\">export default withClass(App, styles.App);</code></p>\\n<h2>PropTypes</h2>\\n<p>React 透過 PropTypes 來做類型檢測的功能。\\nReact v15.5 開始，已把 PropTypes 拆做獨立的 library。\\n使用上需要另外安裝 <code class=\\\"language-text\\\">npm install --save prop-types</code></p>\\n<h4>usage</h4>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">import PropTypes from &#39;prop-types&#39;\\n\\nconst Example = (props) =&gt; {\\n  return (\\n    &lt;div&gt;      \\n      &lt;p&gt;{props.name}&lt;/p&gt;\\n      &lt;p&gt;{props.age}&lt;/p&gt;\\n    &lt;/div&gt;\\n  )\\n}\\n\\nExample.propTypes = {\\n  name: PropTypes.string,\\n  age: PropTypes.number\\n}\\n\\nexport default Example</code></pre>\\n      </div>\\n<p><a href=\\\"http://www.css88.com/react/docs/typechecking-with-proptypes.html\\\">PropTypes 中文文檔</a></p>\\n<h1>React-router(V4) note</h1>\\n<h2>Install</h2>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">npm install --save react-router-dom</code></pre>\\n      </div>\\n<h2>Introduction</h2>\\n<h4>react-router 與 react-router-dom 的差別</h4>\\n<p>react-router-dom 是基於 react-router 並針對瀏覽器環境加入一些功能，像是 Link、BrowserRouter和HashRouter。其他與 react-router 中相同的方法則是將其再導出而已。所以瀏覽器環境下使用 react-router-dom 即可。</p>\\n<h2>Usage</h2>\\n<p>需要在最外層使用 HashRouter 或 BrowserRouter，差別如下:</p>\\n<h4>HashRouter</h4>\\n<p>通過hash值來對路由進行控制，所以網址內會有個#</p>\\n<h4>BrowserRouter</h4>\\n<p>基於HTML5 history API (pushState, replaceState, popState)，但可能會有相容性的問題</p>\\n<h4>Route</h4>\\n<p>用來控制對應的路由顯示對應的組件，常用的屬性exact、path 以及 component。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">&lt;Route exact path=&quot;/&quot; component={Homw} /&gt;\\n&lt;Route path=&quot;/about&quot; component={About} /&gt;\\n&lt;Route path=&quot;/hello&quot; render={() =&gt; &lt;h1&gt;Hello&lt;/h1} /&gt;</code></pre>\\n      </div>\\n<p><strong>exact</strong> 用來作完全匹配，預設為 false，會匹配 <code class=\\\"language-text\\\">/about</code>、<code class=\\\"language-text\\\">/about/a</code>、<code class=\\\"language-text\\\">/about/b</code>，改為 true 的話便只會匹配<code class=\\\"language-text\\\">/about</code>\\n<strong>path</strong> 用來設定要匹配的路徑\\n<strong>component</strong> 用來設定匹配後要顯示的組件\\n<strong>render</strong> 用來設定匹配後要顯示的東西</p>\\n<h4>Link、NavLink</h4>\\n<p>控制路由跳轉</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">&lt;link to=&quot;/about&quot;/&gt;\\n&lt;link to=&quot;/about?name=windy&quot;/&gt;\\n&lt;link to={{\\n     pathname:&#39;/about&#39;,\\n     search:&#39;?name=angel&#39;,\\n     hash:&#39;#women&#39;,\\n     state:{fromDashboard:true}\\n}}/&gt;</code></pre>\\n      </div>\\n<h4>Switch</h4>\\n<p>只渲染出第一個與當前訪問地址匹配的 Route 或 Redirect\\n否則只要匹配的都會顯示</p>\\n<h4>Redirect</h4>\\n<p>重新導向</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript=\\\">\\n      <pre class=\\\"language-javascript=\\\"><code class=\\\"language-javascript=\\\">&lt;Switch&gt;\\n  &lt;Redirect from=&#39;/users/:id&#39; to=&#39;/users/profile/:id&#39;/&gt;\\n  &lt;Route path=&#39;/users/profile/:id&#39; component={Profile}/&gt;\\n&lt;/Switch&gt;</code></pre>\\n      </div>\\n<h4>match</h4>\\n<p>match是在使用router之後被放入props中的一個屬性，在class創建的組件中我們需要通過this.props.match來獲取match之中的信息。match中包含的信息如下。\\n<img src=\\\"https://i.imgur.com/btstriI.png\\\"></p>\\n<h3>參考來源</h3>\\n<p><a href=\\\"http://www.ucamc.com/e-learning/javascript/278-%E7%B0%A1%E5%96%AE%E4%BB%8B%E7%B4%B9%E4%BA%86%E8%A7%A3react-router-4%E6%95%99%E5%AD%B8.html\\\">一探究竟了解React-router 4簡易教學</a>\\n<a href=\\\"https://hk.saowen.com/a/73172216c8b96ab4f135316b229c9d578a81be535f5c7feb4b06cc032a99c1d3\\\">React 快速上手 - 07 前端路由 react-router</a></p>\",\"htmlAst\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Install\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"install node\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"install create-react-app\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"using create-react-app to create a new project\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"shell=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-shell=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-shell=\"]},\"children\":[{\"type\":\"text\",\"value\":\"create-react-app newProject\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"run \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"npm start\"}]},{\"type\":\"text\",\"value\":\" to start project\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Project Structure\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"public\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"用來存放一些靜態設定檔或是HTML檔案\\nmanifest.json 則是用來設定 meta data 資訊\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"src\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"用來存放 react source\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"build\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"透過 \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"npm run build\"}]},{\"type\":\"text\",\"value\":\" 會建立 build 資料夾，並編譯出真正放在伺服器上的所有資料、程式\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"JSX\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"JSX 是一種語法糖，將 JS 中的 類HTML 結構編譯為 JS 程式，幫助開發者更直覺的開發並且開發較好維護的程式碼。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"import React, { Component } from 'react';\\nclass App extends Component {\\n  render() {\\n    return (\\n      // JSX 寫法    \\n      // <div className=\\\"App\\\">\\n      //   <h1>React App</h1>\\n      // </div>\\n\\n      //this is how react really doing, compile jsx to js\\n      //and this is why you haven't used React but still need  import it\\n      //不用 JSX 的寫法\\n      React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'React App'))\\n    );\\n  }\\n}\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"CSS in React\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"透過 import 外部的 CSS ，但此種用法必須搭配 webpack(css-loader)，而且此種方式加入的 CSS 會是全域的 CSS，如果有同名稱的選擇器會相互覆蓋\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"import './Person.css'\\n\\nconst Person = () => {\\n    return (\\n        <div className=\\\"Person\\\">\\n            <p>Person Component</p>\\n        </div>\\n        \\n    )\\n}\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"透過 inline 的方式，但缺點是不能寫 mediaQuery, pseudo 元素，但可透過一個套件 \"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://github.com/FormidableLabs/radium\"},\"children\":[{\"type\":\"text\",\"value\":\"radium\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"//透過一般的 inline 方式\\nconst Person = () => {\\n    return (\\n        <p style={{color: \\\"red\\\"}}>Person Component</p>\\n    )\\n}\\n\\n//inline 方式也可以透過變數來控制 css\\nconst Animal = () => {\\n    const style = {\\n        color: \\\"red\\\",\\n        border: \\\"1px solid #000\\\",\\n        borderRadius: \\\"3px\\\"\\n    }\\n    return (\\n        <p style={style}>Person Component</p>\\n    )\\n}\\n\\n//透過 Radium 來使用CSS\\nimport Radium, { StyleRoot } from 'radium'\\n\\n//如果要透過 Radium 加上 media query 則必須在父元素包上 StyleRoot，其他用法不用\\nclass App extends Component {\\n  render() {    \\n    return (\\n      <StyleRoot>             \\n          <h1>Hello</h1>\\n          <Comp />\\n      </StyleRoot>\\n    );\\n  }\\n}\\n\\n//可以使用正常的 CSS，也可以使用 Pseudo 元素\\nconst Person = () => {\\n  const style = {\\n        '@media (min-width: 500px)': {\\n            width: '450px',\\n            color: 'green'\\n        },\\n        color: 'red',\\n        ':hover': {\\n          color: 'pink'\\n        }\\n    }\\n  return (    \\n      <div style={style}>        \\n          <p>Start editing to see some magic happen :)</p>\\n      </div>    \\n  )\\n}\\n\\n//最後必須呼叫 Radium 並把 component 傳入\\nconst Comp = Radium(Person)\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"透過CSS Module\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h5\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"啟用\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"以 create-react-app 舉例，需要先在 webpack 中啟用。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"先執行 \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"npm run eject\"}]},{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"找到 config 資料夾下的 webpack.config.*(dev or prod)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"找到 module 下面設定 css 的區塊（\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"test: /\\\\.css$/\"}]},{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"在 css-loader 的部分加入 options(modules、localIdentName)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\\nloader: require.resolve('css-loader'),\\noptions: {\\n    importLoaders: 1,\\n    //啟用 modules 功能\\n    modules: true,\\n    //設定編譯過後的 css name 加上一些識別使其成為唯一值\\n    localIdentName: '[name]__[local]__[hash:base64:5]'\\n    \\n    //下為 .prod 中的屬性，不要蓋掉\\n    minimize: true,\\n    sourceMap: shouldUseSourceMap,\\n},\\n},\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h5\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Usage\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"css=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-css=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-css=\"]},\"children\":[{\"type\":\"text\",\"value\":\".Person{\\n    width: 60%;\\n    margin: 16px auto;\\n    border: 1px solid #eee;\\n    box-shadow: 0 2px 3px #ccc;\\n    padding: 16px;\\n    text-align: center;\\n}\\n\\n.big{\\n    font-size: 24px;\\n}\\n\\n.red{\\n    color: red;\\n}\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"import React from 'react'\\n//與引入外部 CSS 不同，啟用 CSS Module 後引入的會變成一個物件\\nimport styles from './Person.css'\\n\\nconst Person = () => {\\n    return (\\n        <div className={styles.Person}>\\n            <p className={styles.big}>Person Component</p>\\n            <p className={styles.red}>Person Component</p>\\n        </div>\\n        \\n    )\\n}\\n\\nexport default Person\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Stateless and Stateful\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"},{\"type\":\"element\",\"tagName\":\"table\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"thead\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"tr\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"th\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Stateful\"}]},{\"type\":\"element\",\"tagName\":\"th\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Stateless\"}]}]}]},{\"type\":\"element\",\"tagName\":\"tbody\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"tr\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"class Abc extends Component { … }\"}]},{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"const Abc = (props) => { … }\"}]}]},{\"type\":\"element\",\"tagName\":\"tr\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Access to State\"}]},{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"X\"}]}]},{\"type\":\"element\",\"tagName\":\"tr\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Lifecycle Hooks\"}]},{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"X\"}]}]},{\"type\":\"element\",\"tagName\":\"tr\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Access State and Props via “this”\"}]},{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Access Props via “this”\"}]}]},{\"type\":\"element\",\"tagName\":\"tr\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"this.state.value & this.props.value2\"}]}]},{\"type\":\"element\",\"tagName\":\"td\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"props.value\"}]}]}]}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Lifecycle Hooks\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"img\",\"properties\":{\"src\":\"https://rangle.github.io/react-training/img/reactjs_component_lifecycle_functions.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n不管在 Mounting 或是 Updating 階段且執行到 render hooks 時，如果有其他嵌套的子組件的話，會先執行子組件的 Lifecycle Hooks。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"<Father>\\n    <Child />\\n</Father>\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"以上方例子來說，如果在各個 Hook 中下 log 的話會依照如下順序：\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running constructor in Father comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running componentWillMount in Father comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running render in Father comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running constructor in Child comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running componentWillMount in Child comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running render in Child comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running componentDidMount in Child comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"running componentDidMount in Father comp\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"How React Updates The DOM\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"並不是執行了 render 方法後，就一定會更新。\\nReact 會透過比較 virtual DOM 來確認是否需要更新，需要才會真正的去操作 DOM，藉此來優化效能。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"img\",\"properties\":{\"src\":\"https://i.imgur.com/kqLfoZz.png\"},\"children\":[]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Fragments\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"React 16.2 Feature\\n可以不用額外包一層div\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"// 原來的寫法\\n<div>        \\n  <p>First</p>\\n  <p>Second</p>\\n  <p>Thired</p>\\n</div>\\n\\n// 新的用法\\n<>\\n  <p>First</p>\\n  <p>Second</p>\\n  <p>Thired</p>\\n</>\\n\\n// 概念\\n// 利用 HOC 直接回傳其 children \\nexport default (props) => props.children\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"HOC(High Order Component)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"本質上只是一個函數，可以回傳 JSX、Stateless and Stateful component\\n透過 HOC 可以將一些固定的邏輯抽取出來，或是增刪修改 state 或 props 。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"e.g.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"僅是把收到的 children 再回傳出去，也就是回傳 JSX\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"// Auxiliary(與 react 16.2 Fragments 一樣的作用)\\n\\nexport default (props) => props.children\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Usage\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"render() {\\n    return (\\n      <Aux>\\n        <Cockpit click={this.Addhandler}/>\\n        <ErrorBoundary>\\n          <Persons persons={this.state.persons}/>\\n        </ErrorBoundary>\\n      </Aux>\\n    );\\n  }\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"e.g.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"回傳一個 stateless component，作用是把傳進來的組件再包裹一層使用者自訂的 class \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"import React, { Component } from 'react'\\n\\nconst withClass = (Comp, classes) => {\\n    return props => (\\n        <div className={classes}> \\n            <Comp {...props}/>\\n        </div>\\n    )\\n}\\n\\nexport default withClass\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Usage\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"export default withClass(App, styles.App);\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"PropTypes\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"React 透過 PropTypes 來做類型檢測的功能。\\nReact v15.5 開始，已把 PropTypes 拆做獨立的 library。\\n使用上需要另外安裝 \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"npm install --save prop-types\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"usage\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"import PropTypes from 'prop-types'\\n\\nconst Example = (props) => {\\n  return (\\n    <div>      \\n      <p>{props.name}</p>\\n      <p>{props.age}</p>\\n    </div>\\n  )\\n}\\n\\nExample.propTypes = {\\n  name: PropTypes.string,\\n  age: PropTypes.number\\n}\\n\\nexport default Example\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://www.css88.com/react/docs/typechecking-with-proptypes.html\"},\"children\":[{\"type\":\"text\",\"value\":\"PropTypes 中文文檔\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h1\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"React-router(V4) note\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Install\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"npm install --save react-router-dom\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Introduction\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"react-router 與 react-router-dom 的差別\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"react-router-dom 是基於 react-router 並針對瀏覽器環境加入一些功能，像是 Link、BrowserRouter和HashRouter。其他與 react-router 中相同的方法則是將其再導出而已。所以瀏覽器環境下使用 react-router-dom 即可。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Usage\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"需要在最外層使用 HashRouter 或 BrowserRouter，差別如下:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"HashRouter\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"通過hash值來對路由進行控制，所以網址內會有個#\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"BrowserRouter\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"基於HTML5 history API (pushState, replaceState, popState)，但可能會有相容性的問題\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Route\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"用來控制對應的路由顯示對應的組件，常用的屬性exact、path 以及 component。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"<Route exact path=\\\"/\\\" component={Homw} />\\n<Route path=\\\"/about\\\" component={About} />\\n<Route path=\\\"/hello\\\" render={() => <h1>Hello</h1} />\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"exact\"}]},{\"type\":\"text\",\"value\":\" 用來作完全匹配，預設為 false，會匹配 \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"/about\"}]},{\"type\":\"text\",\"value\":\"、\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"/about/a\"}]},{\"type\":\"text\",\"value\":\"、\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"/about/b\"}]},{\"type\":\"text\",\"value\":\"，改為 true 的話便只會匹配\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"/about\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"path\"}]},{\"type\":\"text\",\"value\":\" 用來設定要匹配的路徑\\n\"},{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"component\"}]},{\"type\":\"text\",\"value\":\" 用來設定匹配後要顯示的組件\\n\"},{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"render\"}]},{\"type\":\"text\",\"value\":\" 用來設定匹配後要顯示的東西\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Link、NavLink\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"控制路由跳轉\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"<link to=\\\"/about\\\"/>\\n<link to=\\\"/about?name=windy\\\"/>\\n<link to={{\\n     pathname:'/about',\\n     search:'?name=angel',\\n     hash:'#women',\\n     state:{fromDashboard:true}\\n}}/>\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Switch\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"只渲染出第一個與當前訪問地址匹配的 Route 或 Redirect\\n否則只要匹配的都會顯示\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Redirect\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"重新導向\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"javascript=\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-javascript=\"]},\"children\":[{\"type\":\"text\",\"value\":\"<Switch>\\n  <Redirect from='/users/:id' to='/users/profile/:id'/>\\n  <Route path='/users/profile/:id' component={Profile}/>\\n</Switch>\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h4\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"match\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"match是在使用router之後被放入props中的一個屬性，在class創建的組件中我們需要通過this.props.match來獲取match之中的信息。match中包含的信息如下。\\n\"},{\"type\":\"element\",\"tagName\":\"img\",\"properties\":{\"src\":\"https://i.imgur.com/btstriI.png\"},\"children\":[]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"參考來源\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://www.ucamc.com/e-learning/javascript/278-%E7%B0%A1%E5%96%AE%E4%BB%8B%E7%B4%B9%E4%BA%86%E8%A7%A3react-router-4%E6%95%99%E5%AD%B8.html\"},\"children\":[{\"type\":\"text\",\"value\":\"一探究竟了解React-router 4簡易教學\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://hk.saowen.com/a/73172216c8b96ab4f135316b229c9d578a81be535f5c7feb4b06cc032a99c1d3\"},\"children\":[{\"type\":\"text\",\"value\":\"React 快速上手 - 07 前端路由 react-router\"}]}]}],\"data\":{\"quirksMode\":false}},\"fields\":{\"slug\":\"/react-note/\",\"prefix\":\"2018-10-24\"},\"frontmatter\":{\"title\":\"Basics of react and react-router\",\"subTitle\":\"Learn the Basics of react and react-router\",\"cover\":{\"childImageSharp\":{\"resize\":{\"src\":\"/fallins.github.io/static/react-90552fc53de18398a934d32aec962234-160fa.png\"}}}}},\"author\":{\"id\":\"D:/document/blog/content/parts/author.md absPath of file >>> MarkdownRemark\",\"html\":\"<p><strong>Ben</strong> 紀錄學習過程中的筆記…</p>\"},\"footnote\":{\"id\":\"D:/document/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark\",\"html\":\"\"},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"\"}}}},\"pathContext\":{\"slug\":\"/react-note/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/react-note.json\n// module id = 796\n// module chunks = 258549023466380"],"sourceRoot":""}